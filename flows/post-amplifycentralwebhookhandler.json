{
	"schemaVersion": "4",
	"info": {
		"name": "post-amplifycentralwebhookhandler"
	},
	"parameter": {
		"properties": {
			"request": {
				"description": "The request"
			},
			"config": {
				"type": "object",
				"description": "The service's configuration"
			},
			"env": {
				"type": "object",
				"description": "The host OS environment"
			}
		},
		"additionalProperties": false
	},
	"start": "javascript.2",
	"nodes": {
		"http.1": {
			"type": "nodehandler://axway-flow/http",
			"name": "Set HTTP Response",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "200",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"http.2": {
			"type": "nodehandler://axway-flow/http",
			"name": "Set HTTP Response",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "400",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"javascript.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "Prepare Send to MS Teams",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"let url = data.env.MS_TEAMS_WEBHOOK_URL;\\n  \\n  let catalogItemName = data.request.body.payload.consumerInstance.name;\\n  let catalogItemId = data.request.body.payload.catalogItem.id;\\n  let catalogItemUrl = data.env.API_CENTRAL_URL+\\\"/catalog/explore\\\"+\\\"/\\\"+catalogItemId;\\n  \\n  let subscriptionName = data.request.body.payload.subscription.name;\\n  let subscriptionId = data.request.body.payload.subscription.id;\\n  let subscriptionUrl = data.env.API_CENTRAL_URL+\\\"/catalog\\\"+\\\"/\\\"+catalogItemId+\\\"/subscriptions\\\"+\\\"/\\\"+subscriptionId;\\n  \\n  let requestorName = data.getUserResponse.body.result.firstname + \\\" \\\" + data.getUserResponse.body.result.lastname;\\n  let requesorUrl = \\\"https://platform.axway.com/user/\\\"+data.request.body.payload.subscription.metadata.createUserId;\\n  \\n  let requestorEmail = data.getUserResponse.body.result.email;\\n  let requestorEmailUrl = \\\"mailto:\\\"+data.getUserResponse.body.result.email;\\n  \\n  // let approverUrl = 'https://webhook.site/180fff35-c16d-4abe-a479-ebfee0dfa42a';\\n  let approverUrl = data.env.BASEURL+\\\"/api/approver\\\";\\n  \\n  console.log(approverUrl);\\n  \\n  let body = {\\n    \\\"@type\\\": \\\"MessageCard\\\",\\n    \\\"@context\\\": \\\"http://schema.org/extensions\\\",\\n    \\\"themeColor\\\": \\\"0076D7\\\",\\n    \\\"summary\\\": \\\"API Subscription Approval Requested\\\",\\n    \\\"sections\\\": [{\\n        \\\"activityTitle\\\": \\\"API Subscription Approval Requested\\\",\\n        \\\"activitySubtitle\\\": \\\"Please review and approve or reject the request\\\",\\n        \\\"markdown\\\": true,\\n        \\\"facts\\\": [{\\n            \\\"name\\\": \\\"Catalog Item\\\",\\n            // \\\"value\\\": data.request.body.payload.consumerInstance.name\\n          \\t\\\"value\\\": \\\"[\\\"+catalogItemName+\\\"](\\\"+catalogItemUrl+\\\")\\\"\\n        },{\\n            \\\"name\\\": \\\"Subscription\\\",\\n            \\\"value\\\": \\\"[\\\"+subscriptionName+\\\"](\\\"+subscriptionUrl+\\\")\\\"\\n        },{\\n            \\\"name\\\": \\\"Requestor Name\\\",\\n            \\\"value\\\": \\\"[\\\"+requestorName+\\\"](\\\"+requesorUrl+\\\")\\\"\\n        },{\\n            \\\"name\\\": \\\"Requestor Email\\\",\\n            \\\"value\\\": \\\"[\\\"+requestorEmail+\\\"](\\\"+requestorEmailUrl+\\\")\\\"\\n        }],\\n    }],\\n    \\\"potentialAction\\\": [{\\n        \\\"@type\\\": \\\"ActionCard\\\",\\n        \\\"name\\\": \\\"Comment\\\",\\n        \\\"inputs\\\": [{\\n            \\\"@type\\\": \\\"TextInput\\\",\\n            \\\"id\\\": \\\"comment\\\",\\n            \\\"isMultiline\\\": false,\\n            \\\"title\\\": \\\"Please enter any comments\\\"\\n        }],\\n        \\\"actions\\\": [{\\n            \\\"@type\\\": \\\"HttpPOST\\\",\\n            \\\"name\\\": \\\"Approve\\\",\\n            \\\"target\\\": approverUrl,\\n            \\\"body\\\": \\\"{\\\\\\\"comment\\\\\\\":\\\\\\\"{{comment.value}}\\\\\\\",\\\\\\\"approvalStatus\\\\\\\":\\\\\\\"Approved\\\\\\\", \\\\\\\"catalogItemId\\\\\\\":\\\\\\\"\\\"+catalogItemId+\\\"\\\\\\\",\\\\\\\"catalogItemName\\\\\\\":\\\\\\\"\\\"+catalogItemName+\\\"\\\\\\\",\\\\\\\"subscriptionId\\\\\\\":\\\\\\\"\\\"+subscriptionId+\\\"\\\\\\\",\\\\\\\"subscriptionName\\\\\\\":\\\\\\\"\\\"+subscriptionName+\\\"\\\\\\\",\\\\\\\"requestorName\\\\\\\":\\\\\\\"\\\"+requestorName+\\\"\\\\\\\",\\\\\\\"requestorEmail\\\\\\\":\\\\\\\"\\\"+requestorEmail+\\\"\\\\\\\"}\\\",\\n            \\\"headers\\\": [{\\n            \\t\\\"name\\\": \\\"apiKey\\\",\\n            \\t\\\"value\\\": data.env.API_KEY\\n            }]\\n        },{\\n            \\\"@type\\\": \\\"HttpPOST\\\",\\n            \\\"name\\\": \\\"Reject\\\",\\n            \\\"target\\\": approverUrl,\\n            \\\"body\\\": \\\"{\\\\\\\"comment\\\\\\\":\\\\\\\"{{comment.value}}\\\\\\\",\\\\\\\"approvalStatus\\\\\\\":\\\\\\\"Rejected\\\\\\\", \\\\\\\"catalogItemId\\\\\\\":\\\\\\\"\\\"+catalogItemId+\\\"\\\\\\\",\\\\\\\"catalogItemName\\\\\\\":\\\\\\\"\\\"+catalogItemName+\\\"\\\\\\\",\\\\\\\"subscriptionId\\\\\\\":\\\\\\\"\\\"+subscriptionId+\\\"\\\\\\\",\\\\\\\"subscriptionName\\\\\\\":\\\\\\\"\\\"+subscriptionName+\\\"\\\\\\\",\\\\\\\"requestorName\\\\\\\":\\\\\\\"\\\"+requestorName+\\\"\\\\\\\",\\\\\\\"requestorEmail\\\\\\\":\\\\\\\"\\\"+requestorEmail+\\\"\\\\\\\"}\\\",\\n            \\\"headers\\\": [{\\n            \\t\\\"name\\\": \\\"apiKey\\\",\\n            \\t\\\"value\\\": data.env.API_KEY\\n            }]\\n        }]\\n    }]\\n};\\n  \\n  return {url,body};\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"rest.2"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"rest.2": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "Send to MS Teams",
			"method": "post",
			"parameters": [
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.result.body",
					"metaName": "Body",
					"metaDescription": "The content to send."
				},
				{
					"name": "url",
					"type": "jsonpath",
					"value": "$.result.url",
					"metaName": "URL",
					"metaDescription": "The target URL."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [
						"http.2"
					],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [
						"http.2"
					],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [
						"http.2"
					],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [
						"http.2"
					],
					"context": "$.response",
					"metaName": "Error"
				}
			},
			"metaMethod": "POST"
		},
		"javascript.2": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "Check valid condition to process",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"// console.log(data);\\n  \\n  let type = data.request.body.type;\\n  let currentState = data.request.body.payload.subscription.currentState;\\n  \\n  return type==='SubscriptionUpdatedEvent' && currentState==='REQUESTED';\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"condition.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"condition.1": {
			"type": "nodehandler://axway-flow/condition",
			"name": "Equals",
			"method": "equals",
			"parameters": [
				{
					"name": "source",
					"type": "jsonpath",
					"value": "$.result",
					"metaName": "Source",
					"metaDescription": "The input to test."
				},
				{
					"name": "value",
					"type": "boolean",
					"value": "true",
					"metaName": "Value",
					"metaDescription": "The value to test input against."
				}
			],
			"outputs": {
				"true": {
					"routes": [
						"authz.1"
					],
					"context": "$.equals",
					"metaName": "True"
				},
				"false": {
					"routes": [
						"http.2"
					],
					"context": "$.equals",
					"metaName": "False"
				}
			},
			"metaMethod": "Equals"
		},
		"javascript.3": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "Prepare get user info",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"let userId = data.request.body.payload.subscription.metadata.createUserId;\\n  let url = 'https://platform.axway.com/api/v1/user/'+userId;\\n  \\n  let headers = {\\n    'Authorization': `Bearer ${data.credential}`,\\n    'Content-Type': 'application/json'\\n  };\\n  \\n  return {url,headers};\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"rest.3"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"rest.3": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "Get user info",
			"method": "get",
			"parameters": [
				{
					"name": "url",
					"type": "jsonpath",
					"value": "$.result.url",
					"metaName": "URL",
					"metaDescription": "The target URL."
				},
				{
					"name": "headers",
					"type": "jsonpath",
					"value": "$.result.headers",
					"metaName": "Headers",
					"metaDescription": "The HTTP headers to set."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"javascript.1"
					],
					"context": "$.getUserResponse",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [
						"http.2"
					],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [
						"http.2"
					],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [
						"http.2"
					],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [
						"http.2"
					],
					"context": "$.response",
					"metaName": "Error"
				}
			},
			"metaMethod": "GET"
		},
		"authz.1": {
			"type": "nodehandler://axway-flow-authorization/authz",
			"name": "Get Credential",
			"method": "getCredential",
			"parameters": [
				{
					"name": "name",
					"type": "string",
					"value": "\"Amplify Unified Catalog APIs OAuth2ClientCredentials_clientCredentials\"",
					"metaName": "Name",
					"metaDescription": "The name of the configured credential to find and return."
				}
			],
			"outputs": {
				"next": {
					"context": "$.credential",
					"routes": [
						"javascript.3"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Get Credential"
		}
	}
}